{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginGuard } from './autenticacao/login.guard';\nimport { AutenticacaoGuard } from './autenticacao/autenticacao.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  pathMatch: 'full',\n  redirectTo: 'home'\n}, {\n  path: 'home',\n  loadChildren: () => import('./home/home.module').then(m => m.HomeModule),\n  canLoad: [LoginGuard] //   No app-routing.module.ts devemos associar essa guarda-rotas a rota que devemos proteger, no caso se estiver logado\n  // não acessar a pagina de login novamente e redirecionar para rota 'animais'\n\n}, {\n  path: 'animais',\n  loadChildren: () => import('./animais/animais.module').then(m => m.AnimaisModule),\n  canLoad: [AutenticacaoGuard] // associa o guarda rotas a rota para protecao\n  // No app-routing.module.ts devemos associar essa guarda-rotas a rota que devemos proteger no caso da rota 'animais',\n  // para caso não esteja logado redirecionar ao login\n\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forRoot(routes)], RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}